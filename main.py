from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import os

TOKEN = os.environ.get("BOT_TOKEN")

steps = [
    "üîπ –®–∞–≥ 1: –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
    "üîπ –®–∞–≥ 2: –í–æ—Ç —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥.",
    "üîπ –®–∞–≥ 3: –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ!",
    "‚úÖ –®–∞–≥ 4: –ì–æ—Ç–æ–≤–æ! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ—à—ë–ª –≤—Å–µ —à–∞–≥–∏."
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ —à–∞–≥—É 1", callback_data="step_0")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:", reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    step_index = int(query.data.split("_")[1])
    text = steps[step_index]

    if step_index + 1 < len(steps):
        keyboard = [[InlineKeyboardButton("–î–∞–ª–µ–µ ‚û°Ô∏è", callback_data=f"step_{step_index + 1}")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
    else:
        reply_markup = None

    await query.edit_message_text(text=text, reply_markup=reply_markup)

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_handler))

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
app.run_polling()
